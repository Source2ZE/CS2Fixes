// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: econ_gcmessages.proto

#ifndef GOOGLE_PROTOBUF_INCLUDED_econ_5fgcmessages_2eproto
#define GOOGLE_PROTOBUF_INCLUDED_econ_5fgcmessages_2eproto

#include <limits>
#include <string>

#include <google/protobuf/port_def.inc>
#if PROTOBUF_VERSION < 3021000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers. Please update
#error your headers.
#endif
#if 3021008 < PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers. Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/port_undef.inc>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata_lite.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/generated_enum_reflection.h>
#include <google/protobuf/unknown_field_set.h>
#include "steammessages.pb.h"
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>
#define PROTOBUF_INTERNAL_EXPORT_econ_5fgcmessages_2eproto
PROTOBUF_NAMESPACE_OPEN
namespace internal {
class AnyMetadata;
}  // namespace internal
PROTOBUF_NAMESPACE_CLOSE

// Internal implementation detail -- do not use these members.
struct TableStruct_econ_5fgcmessages_2eproto {
  static const uint32_t offsets[];
};
extern const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable descriptor_table_econ_5fgcmessages_2eproto;
class CMsgCasketItem;
struct CMsgCasketItemDefaultTypeInternal;
extern CMsgCasketItemDefaultTypeInternal _CMsgCasketItem_default_instance_;
class CMsgGCDev_SchemaReservationRequest;
struct CMsgGCDev_SchemaReservationRequestDefaultTypeInternal;
extern CMsgGCDev_SchemaReservationRequestDefaultTypeInternal _CMsgGCDev_SchemaReservationRequest_default_instance_;
class CMsgGCGiftedItems;
struct CMsgGCGiftedItemsDefaultTypeInternal;
extern CMsgGCGiftedItemsDefaultTypeInternal _CMsgGCGiftedItems_default_instance_;
class CMsgGCItemCustomizationNotification;
struct CMsgGCItemCustomizationNotificationDefaultTypeInternal;
extern CMsgGCItemCustomizationNotificationDefaultTypeInternal _CMsgGCItemCustomizationNotification_default_instance_;
class CMsgGCUserTrackTimePlayedConsecutively;
struct CMsgGCUserTrackTimePlayedConsecutivelyDefaultTypeInternal;
extern CMsgGCUserTrackTimePlayedConsecutivelyDefaultTypeInternal _CMsgGCUserTrackTimePlayedConsecutively_default_instance_;
PROTOBUF_NAMESPACE_OPEN
template<> ::CMsgCasketItem* Arena::CreateMaybeMessage<::CMsgCasketItem>(Arena*);
template<> ::CMsgGCDev_SchemaReservationRequest* Arena::CreateMaybeMessage<::CMsgGCDev_SchemaReservationRequest>(Arena*);
template<> ::CMsgGCGiftedItems* Arena::CreateMaybeMessage<::CMsgGCGiftedItems>(Arena*);
template<> ::CMsgGCItemCustomizationNotification* Arena::CreateMaybeMessage<::CMsgGCItemCustomizationNotification>(Arena*);
template<> ::CMsgGCUserTrackTimePlayedConsecutively* Arena::CreateMaybeMessage<::CMsgGCUserTrackTimePlayedConsecutively>(Arena*);
PROTOBUF_NAMESPACE_CLOSE

enum EGCItemMsg : int {
  k_EMsgGCBase = 1000,
  k_EMsgGCSetItemPosition = 1001,
  k_EMsgGCCraft = 1002,
  k_EMsgGCCraftResponse = 1003,
  k_EMsgGCDelete = 1004,
  k_EMsgGCVerifyCacheSubscription = 1005,
  k_EMsgGCNameItem = 1006,
  k_EMsgGCUnlockCrate = 1007,
  k_EMsgGCUnlockCrateResponse = 1008,
  k_EMsgGCPaintItem = 1009,
  k_EMsgGCPaintItemResponse = 1010,
  k_EMsgGCGoldenWrenchBroadcast = 1011,
  k_EMsgGCMOTDRequest = 1012,
  k_EMsgGCMOTDRequestResponse = 1013,
  k_EMsgGCAddItemToSocket_DEPRECATED = 1014,
  k_EMsgGCAddItemToSocketResponse_DEPRECATED = 1015,
  k_EMsgGCAddSocketToBaseItem_DEPRECATED = 1016,
  k_EMsgGCAddSocketToItem_DEPRECATED = 1017,
  k_EMsgGCAddSocketToItemResponse_DEPRECATED = 1018,
  k_EMsgGCNameBaseItem = 1019,
  k_EMsgGCNameBaseItemResponse = 1020,
  k_EMsgGCRemoveSocketItem_DEPRECATED = 1021,
  k_EMsgGCRemoveSocketItemResponse_DEPRECATED = 1022,
  k_EMsgGCCustomizeItemTexture = 1023,
  k_EMsgGCCustomizeItemTextureResponse = 1024,
  k_EMsgGCUseItemRequest = 1025,
  k_EMsgGCUseItemResponse = 1026,
  k_EMsgGCGiftedItems_DEPRECATED = 1027,
  k_EMsgGCRemoveItemName = 1030,
  k_EMsgGCRemoveItemPaint = 1031,
  k_EMsgGCGiftWrapItem = 1032,
  k_EMsgGCGiftWrapItemResponse = 1033,
  k_EMsgGCDeliverGift = 1034,
  k_EMsgGCDeliverGiftResponseGiver = 1035,
  k_EMsgGCDeliverGiftResponseReceiver = 1036,
  k_EMsgGCUnwrapGiftRequest = 1037,
  k_EMsgGCUnwrapGiftResponse = 1038,
  k_EMsgGCSetItemStyle = 1039,
  k_EMsgGCUsedClaimCodeItem = 1040,
  k_EMsgGCSortItems = 1041,
  k_EMsgGC_RevolvingLootList_DEPRECATED = 1042,
  k_EMsgGCLookupAccount = 1043,
  k_EMsgGCLookupAccountResponse = 1044,
  k_EMsgGCLookupAccountName = 1045,
  k_EMsgGCLookupAccountNameResponse = 1046,
  k_EMsgGCUpdateItemSchema = 1049,
  k_EMsgGCRemoveCustomTexture = 1051,
  k_EMsgGCRemoveCustomTextureResponse = 1052,
  k_EMsgGCRemoveMakersMark = 1053,
  k_EMsgGCRemoveMakersMarkResponse = 1054,
  k_EMsgGCRemoveUniqueCraftIndex = 1055,
  k_EMsgGCRemoveUniqueCraftIndexResponse = 1056,
  k_EMsgGCSaxxyBroadcast = 1057,
  k_EMsgGCBackpackSortFinished = 1058,
  k_EMsgGCAdjustItemEquippedState = 1059,
  k_EMsgGCCollectItem = 1061,
  k_EMsgGCItemAcknowledged__DEPRECATED = 1062,
  k_EMsgGC_ReportAbuse = 1065,
  k_EMsgGC_ReportAbuseResponse = 1066,
  k_EMsgGCNameItemNotification = 1068,
  k_EMsgGCApplyConsumableEffects = 1069,
  k_EMsgGCConsumableExhausted = 1070,
  k_EMsgGCShowItemsPickedUp = 1071,
  k_EMsgGCClientDisplayNotification = 1072,
  k_EMsgGCApplyStrangePart = 1073,
  k_EMsgGC_IncrementKillCountAttribute = 1074,
  k_EMsgGC_IncrementKillCountResponse = 1075,
  k_EMsgGCApplyPennantUpgrade = 1076,
  k_EMsgGCSetItemPositions = 1077,
  k_EMsgGCApplyEggEssence = 1078,
  k_EMsgGCNameEggEssenceResponse = 1079,
  k_EMsgGCPaintKitItem = 1080,
  k_EMsgGCPaintKitBaseItem = 1081,
  k_EMsgGCPaintKitItemResponse = 1082,
  k_EMsgGCGiftedItems = 1083,
  k_EMsgGCUnlockItemStyle = 1084,
  k_EMsgGCUnlockItemStyleResponse = 1085,
  k_EMsgGCApplySticker = 1086,
  k_EMsgGCItemAcknowledged = 1087,
  k_EMsgGCStatTrakSwap = 1088,
  k_EMsgGCUserTrackTimePlayedConsecutively = 1089,
  k_EMsgGCItemCustomizationNotification = 1090,
  k_EMsgGCModifyItemAttribute = 1091,
  k_EMsgGCCasketItemAdd = 1092,
  k_EMsgGCCasketItemExtract = 1093,
  k_EMsgGCCasketItemLoadContents = 1094,
  k_EMsgGCTradingBase = 1500,
  k_EMsgGCTrading_InitiateTradeRequest = 1501,
  k_EMsgGCTrading_InitiateTradeResponse = 1502,
  k_EMsgGCTrading_StartSession = 1503,
  k_EMsgGCTrading_SetItem = 1504,
  k_EMsgGCTrading_RemoveItem = 1505,
  k_EMsgGCTrading_UpdateTradeInfo = 1506,
  k_EMsgGCTrading_SetReadiness = 1507,
  k_EMsgGCTrading_ReadinessResponse = 1508,
  k_EMsgGCTrading_SessionClosed = 1509,
  k_EMsgGCTrading_CancelSession = 1510,
  k_EMsgGCTrading_TradeChatMsg = 1511,
  k_EMsgGCTrading_ConfirmOffer = 1512,
  k_EMsgGCTrading_TradeTypingChatMsg = 1513,
  k_EMsgGCServerBrowser_FavoriteServer = 1601,
  k_EMsgGCServerBrowser_BlacklistServer = 1602,
  k_EMsgGCServerRentalsBase = 1700,
  k_EMsgGCItemPreviewCheckStatus = 1701,
  k_EMsgGCItemPreviewStatusResponse = 1702,
  k_EMsgGCItemPreviewRequest = 1703,
  k_EMsgGCItemPreviewRequestResponse = 1704,
  k_EMsgGCItemPreviewExpire = 1705,
  k_EMsgGCItemPreviewExpireNotification = 1706,
  k_EMsgGCItemPreviewItemBoughtNotification = 1707,
  k_EMsgGCDev_NewItemRequest = 2001,
  k_EMsgGCDev_NewItemRequestResponse = 2002,
  k_EMsgGCDev_PaintKitDropItem = 2003,
  k_EMsgGCDev_SchemaReservationRequest = 2004,
  k_EMsgGCStoreGetUserData = 2500,
  k_EMsgGCStoreGetUserDataResponse = 2501,
  k_EMsgGCStorePurchaseInit_DEPRECATED = 2502,
  k_EMsgGCStorePurchaseInitResponse_DEPRECATED = 2503,
  k_EMsgGCStorePurchaseFinalize = 2504,
  k_EMsgGCStorePurchaseFinalizeResponse = 2505,
  k_EMsgGCStorePurchaseCancel = 2506,
  k_EMsgGCStorePurchaseCancelResponse = 2507,
  k_EMsgGCStorePurchaseQueryTxn = 2508,
  k_EMsgGCStorePurchaseQueryTxnResponse = 2509,
  k_EMsgGCStorePurchaseInit = 2510,
  k_EMsgGCStorePurchaseInitResponse = 2511,
  k_EMsgGCBannedWordListRequest = 2512,
  k_EMsgGCBannedWordListResponse = 2513,
  k_EMsgGCToGCBannedWordListBroadcast = 2514,
  k_EMsgGCToGCBannedWordListUpdated = 2515,
  k_EMsgGCToGCDirtySDOCache = 2516,
  k_EMsgGCToGCDirtyMultipleSDOCache = 2517,
  k_EMsgGCToGCUpdateSQLKeyValue = 2518,
  k_EMsgGCToGCIsTrustedServer = 2519,
  k_EMsgGCToGCIsTrustedServerResponse = 2520,
  k_EMsgGCToGCBroadcastConsoleCommand = 2521,
  k_EMsgGCServerVersionUpdated = 2522,
  k_EMsgGCToGCWebAPIAccountChanged = 2524,
  k_EMsgGCRequestAnnouncements = 2525,
  k_EMsgGCRequestAnnouncementsResponse = 2526,
  k_EMsgGCRequestPassportItemGrant = 2527,
  k_EMsgGCClientVersionUpdated = 2528,
  k_EMsgGCAdjustItemEquippedStateMulti = 2529,
  k_EMsgGCRecurringSubscriptionStatus = 2530,
  k_EMsgGCAdjustEquipSlotsManual = 2531,
  k_EMsgGCAdjustEquipSlotsShuffle = 2532,
  k_EMsgGCNameItemAndEquip = 2533,
  k_EMsgGCOpenCrate = 2534,
  k_EMsgGCAcknowledgeRentalExpiration = 2535
};
bool EGCItemMsg_IsValid(int value);
constexpr EGCItemMsg EGCItemMsg_MIN = k_EMsgGCBase;
constexpr EGCItemMsg EGCItemMsg_MAX = k_EMsgGCAcknowledgeRentalExpiration;
constexpr int EGCItemMsg_ARRAYSIZE = EGCItemMsg_MAX + 1;

const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* EGCItemMsg_descriptor();
template<typename T>
inline const std::string& EGCItemMsg_Name(T enum_t_value) {
  static_assert(::std::is_same<T, EGCItemMsg>::value ||
    ::std::is_integral<T>::value,
    "Incorrect type passed to function EGCItemMsg_Name.");
  return ::PROTOBUF_NAMESPACE_ID::internal::NameOfEnum(
    EGCItemMsg_descriptor(), enum_t_value);
}
inline bool EGCItemMsg_Parse(
    ::PROTOBUF_NAMESPACE_ID::ConstStringParam name, EGCItemMsg* value) {
  return ::PROTOBUF_NAMESPACE_ID::internal::ParseNamedEnum<EGCItemMsg>(
    EGCItemMsg_descriptor(), name, value);
}
enum EGCMsgResponse : int {
  k_EGCMsgResponseOK = 0,
  k_EGCMsgResponseDenied = 1,
  k_EGCMsgResponseServerError = 2,
  k_EGCMsgResponseTimeout = 3,
  k_EGCMsgResponseInvalid = 4,
  k_EGCMsgResponseNoMatch = 5,
  k_EGCMsgResponseUnknownError = 6,
  k_EGCMsgResponseNotLoggedOn = 7,
  k_EGCMsgFailedToCreate = 8,
  k_EGCMsgLimitExceeded = 9,
  k_EGCMsgCommitUnfinalized = 10
};
bool EGCMsgResponse_IsValid(int value);
constexpr EGCMsgResponse EGCMsgResponse_MIN = k_EGCMsgResponseOK;
constexpr EGCMsgResponse EGCMsgResponse_MAX = k_EGCMsgCommitUnfinalized;
constexpr int EGCMsgResponse_ARRAYSIZE = EGCMsgResponse_MAX + 1;

const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* EGCMsgResponse_descriptor();
template<typename T>
inline const std::string& EGCMsgResponse_Name(T enum_t_value) {
  static_assert(::std::is_same<T, EGCMsgResponse>::value ||
    ::std::is_integral<T>::value,
    "Incorrect type passed to function EGCMsgResponse_Name.");
  return ::PROTOBUF_NAMESPACE_ID::internal::NameOfEnum(
    EGCMsgResponse_descriptor(), enum_t_value);
}
inline bool EGCMsgResponse_Parse(
    ::PROTOBUF_NAMESPACE_ID::ConstStringParam name, EGCMsgResponse* value) {
  return ::PROTOBUF_NAMESPACE_ID::internal::ParseNamedEnum<EGCMsgResponse>(
    EGCMsgResponse_descriptor(), name, value);
}
enum EUnlockStyle : int {
  k_UnlockStyle_Succeeded = 0,
  k_UnlockStyle_Failed_PreReq = 1,
  k_UnlockStyle_Failed_CantAfford = 2,
  k_UnlockStyle_Failed_CantCommit = 3,
  k_UnlockStyle_Failed_CantLockCache = 4,
  k_UnlockStyle_Failed_CantAffordAttrib = 5
};
bool EUnlockStyle_IsValid(int value);
constexpr EUnlockStyle EUnlockStyle_MIN = k_UnlockStyle_Succeeded;
constexpr EUnlockStyle EUnlockStyle_MAX = k_UnlockStyle_Failed_CantAffordAttrib;
constexpr int EUnlockStyle_ARRAYSIZE = EUnlockStyle_MAX + 1;

const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* EUnlockStyle_descriptor();
template<typename T>
inline const std::string& EUnlockStyle_Name(T enum_t_value) {
  static_assert(::std::is_same<T, EUnlockStyle>::value ||
    ::std::is_integral<T>::value,
    "Incorrect type passed to function EUnlockStyle_Name.");
  return ::PROTOBUF_NAMESPACE_ID::internal::NameOfEnum(
    EUnlockStyle_descriptor(), enum_t_value);
}
inline bool EUnlockStyle_Parse(
    ::PROTOBUF_NAMESPACE_ID::ConstStringParam name, EUnlockStyle* value) {
  return ::PROTOBUF_NAMESPACE_ID::internal::ParseNamedEnum<EUnlockStyle>(
    EUnlockStyle_descriptor(), name, value);
}
enum EGCItemCustomizationNotification : int {
  k_EGCItemCustomizationNotification_NameItem = 1006,
  k_EGCItemCustomizationNotification_UnlockCrate = 1007,
  k_EGCItemCustomizationNotification_XRayItemReveal = 1008,
  k_EGCItemCustomizationNotification_XRayItemClaim = 1009,
  k_EGCItemCustomizationNotification_CasketTooFull = 1011,
  k_EGCItemCustomizationNotification_CasketContents = 1012,
  k_EGCItemCustomizationNotification_CasketAdded = 1013,
  k_EGCItemCustomizationNotification_CasketRemoved = 1014,
  k_EGCItemCustomizationNotification_CasketInvFull = 1015,
  k_EGCItemCustomizationNotification_NameBaseItem = 1019,
  k_EGCItemCustomizationNotification_RemoveItemName = 1030,
  k_EGCItemCustomizationNotification_RemoveSticker = 1053,
  k_EGCItemCustomizationNotification_ApplySticker = 1086,
  k_EGCItemCustomizationNotification_StatTrakSwap = 1088,
  k_EGCItemCustomizationNotification_RemovePatch = 1089,
  k_EGCItemCustomizationNotification_ApplyPatch = 1090,
  k_EGCItemCustomizationNotification_ApplyKeychain = 1091,
  k_EGCItemCustomizationNotification_RemoveKeychain = 1092,
  k_EGCItemCustomizationNotification_ActivateFanToken = 9178,
  k_EGCItemCustomizationNotification_ActivateOperationCoin = 9179,
  k_EGCItemCustomizationNotification_GraffitiUnseal = 9185,
  k_EGCItemCustomizationNotification_GenerateSouvenir = 9204,
  k_EGCItemCustomizationNotification_ClientRedeemMissionReward = 9209,
  k_EGCItemCustomizationNotification_ClientRedeemFreeReward = 9219,
  k_EGCItemCustomizationNotification_XpShopUseTicket = 9221,
  k_EGCItemCustomizationNotification_XpShopAckTracks = 9222
};
bool EGCItemCustomizationNotification_IsValid(int value);
constexpr EGCItemCustomizationNotification EGCItemCustomizationNotification_MIN = k_EGCItemCustomizationNotification_NameItem;
constexpr EGCItemCustomizationNotification EGCItemCustomizationNotification_MAX = k_EGCItemCustomizationNotification_XpShopAckTracks;
constexpr int EGCItemCustomizationNotification_ARRAYSIZE = EGCItemCustomizationNotification_MAX + 1;

const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* EGCItemCustomizationNotification_descriptor();
template<typename T>
inline const std::string& EGCItemCustomizationNotification_Name(T enum_t_value) {
  static_assert(::std::is_same<T, EGCItemCustomizationNotification>::value ||
    ::std::is_integral<T>::value,
    "Incorrect type passed to function EGCItemCustomizationNotification_Name.");
  return ::PROTOBUF_NAMESPACE_ID::internal::NameOfEnum(
    EGCItemCustomizationNotification_descriptor(), enum_t_value);
}
inline bool EGCItemCustomizationNotification_Parse(
    ::PROTOBUF_NAMESPACE_ID::ConstStringParam name, EGCItemCustomizationNotification* value) {
  return ::PROTOBUF_NAMESPACE_ID::internal::ParseNamedEnum<EGCItemCustomizationNotification>(
    EGCItemCustomizationNotification_descriptor(), name, value);
}
// ===================================================================

class CMsgGCGiftedItems :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:CMsgGCGiftedItems) */ {
 public:
  inline CMsgGCGiftedItems() : CMsgGCGiftedItems(nullptr) {}
  ~CMsgGCGiftedItems() override;
  explicit PROTOBUF_CONSTEXPR CMsgGCGiftedItems(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  CMsgGCGiftedItems(const CMsgGCGiftedItems& from);
  CMsgGCGiftedItems(CMsgGCGiftedItems&& from) noexcept
    : CMsgGCGiftedItems() {
    *this = ::std::move(from);
  }

  inline CMsgGCGiftedItems& operator=(const CMsgGCGiftedItems& from) {
    CopyFrom(from);
    return *this;
  }
  inline CMsgGCGiftedItems& operator=(CMsgGCGiftedItems&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const CMsgGCGiftedItems& default_instance() {
    return *internal_default_instance();
  }
  static inline const CMsgGCGiftedItems* internal_default_instance() {
    return reinterpret_cast<const CMsgGCGiftedItems*>(
               &_CMsgGCGiftedItems_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    0;

  friend void swap(CMsgGCGiftedItems& a, CMsgGCGiftedItems& b) {
    a.Swap(&b);
  }
  inline void Swap(CMsgGCGiftedItems* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CMsgGCGiftedItems* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  CMsgGCGiftedItems* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<CMsgGCGiftedItems>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const CMsgGCGiftedItems& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom( const CMsgGCGiftedItems& from) {
    CMsgGCGiftedItems::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::PROTOBUF_NAMESPACE_ID::Arena* arena, bool is_message_owned);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CMsgGCGiftedItems* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "CMsgGCGiftedItems";
  }
  protected:
  explicit CMsgGCGiftedItems(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kRecipientsAccountidsFieldNumber = 5,
    kAccountidFieldNumber = 1,
    kGiftdefindexFieldNumber = 2,
    kMaxGiftsPossibleFieldNumber = 3,
    kNumEligibleRecipientsFieldNumber = 4,
  };
  // repeated uint32 recipients_accountids = 5;
  int recipients_accountids_size() const;
  private:
  int _internal_recipients_accountids_size() const;
  public:
  void clear_recipients_accountids();
  private:
  uint32_t _internal_recipients_accountids(int index) const;
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField< uint32_t >&
      _internal_recipients_accountids() const;
  void _internal_add_recipients_accountids(uint32_t value);
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< uint32_t >*
      _internal_mutable_recipients_accountids();
  public:
  uint32_t recipients_accountids(int index) const;
  void set_recipients_accountids(int index, uint32_t value);
  void add_recipients_accountids(uint32_t value);
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField< uint32_t >&
      recipients_accountids() const;
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< uint32_t >*
      mutable_recipients_accountids();

  // optional uint32 accountid = 1;
  bool has_accountid() const;
  private:
  bool _internal_has_accountid() const;
  public:
  void clear_accountid();
  uint32_t accountid() const;
  void set_accountid(uint32_t value);
  private:
  uint32_t _internal_accountid() const;
  void _internal_set_accountid(uint32_t value);
  public:

  // optional uint32 giftdefindex = 2;
  bool has_giftdefindex() const;
  private:
  bool _internal_has_giftdefindex() const;
  public:
  void clear_giftdefindex();
  uint32_t giftdefindex() const;
  void set_giftdefindex(uint32_t value);
  private:
  uint32_t _internal_giftdefindex() const;
  void _internal_set_giftdefindex(uint32_t value);
  public:

  // optional uint32 max_gifts_possible = 3;
  bool has_max_gifts_possible() const;
  private:
  bool _internal_has_max_gifts_possible() const;
  public:
  void clear_max_gifts_possible();
  uint32_t max_gifts_possible() const;
  void set_max_gifts_possible(uint32_t value);
  private:
  uint32_t _internal_max_gifts_possible() const;
  void _internal_set_max_gifts_possible(uint32_t value);
  public:

  // optional uint32 num_eligible_recipients = 4;
  bool has_num_eligible_recipients() const;
  private:
  bool _internal_has_num_eligible_recipients() const;
  public:
  void clear_num_eligible_recipients();
  uint32_t num_eligible_recipients() const;
  void set_num_eligible_recipients(uint32_t value);
  private:
  uint32_t _internal_num_eligible_recipients() const;
  void _internal_set_num_eligible_recipients(uint32_t value);
  public:

  // @@protoc_insertion_point(class_scope:CMsgGCGiftedItems)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
    mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
    ::PROTOBUF_NAMESPACE_ID::RepeatedField< uint32_t > recipients_accountids_;
    uint32_t accountid_;
    uint32_t giftdefindex_;
    uint32_t max_gifts_possible_;
    uint32_t num_eligible_recipients_;
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_econ_5fgcmessages_2eproto;
};
// -------------------------------------------------------------------

class CMsgGCDev_SchemaReservationRequest :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:CMsgGCDev_SchemaReservationRequest) */ {
 public:
  inline CMsgGCDev_SchemaReservationRequest() : CMsgGCDev_SchemaReservationRequest(nullptr) {}
  ~CMsgGCDev_SchemaReservationRequest() override;
  explicit PROTOBUF_CONSTEXPR CMsgGCDev_SchemaReservationRequest(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  CMsgGCDev_SchemaReservationRequest(const CMsgGCDev_SchemaReservationRequest& from);
  CMsgGCDev_SchemaReservationRequest(CMsgGCDev_SchemaReservationRequest&& from) noexcept
    : CMsgGCDev_SchemaReservationRequest() {
    *this = ::std::move(from);
  }

  inline CMsgGCDev_SchemaReservationRequest& operator=(const CMsgGCDev_SchemaReservationRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline CMsgGCDev_SchemaReservationRequest& operator=(CMsgGCDev_SchemaReservationRequest&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const CMsgGCDev_SchemaReservationRequest& default_instance() {
    return *internal_default_instance();
  }
  static inline const CMsgGCDev_SchemaReservationRequest* internal_default_instance() {
    return reinterpret_cast<const CMsgGCDev_SchemaReservationRequest*>(
               &_CMsgGCDev_SchemaReservationRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    1;

  friend void swap(CMsgGCDev_SchemaReservationRequest& a, CMsgGCDev_SchemaReservationRequest& b) {
    a.Swap(&b);
  }
  inline void Swap(CMsgGCDev_SchemaReservationRequest* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CMsgGCDev_SchemaReservationRequest* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  CMsgGCDev_SchemaReservationRequest* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<CMsgGCDev_SchemaReservationRequest>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const CMsgGCDev_SchemaReservationRequest& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom( const CMsgGCDev_SchemaReservationRequest& from) {
    CMsgGCDev_SchemaReservationRequest::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::PROTOBUF_NAMESPACE_ID::Arena* arena, bool is_message_owned);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CMsgGCDev_SchemaReservationRequest* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "CMsgGCDev_SchemaReservationRequest";
  }
  protected:
  explicit CMsgGCDev_SchemaReservationRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kSchemaTypenameFieldNumber = 1,
    kInstanceNameFieldNumber = 2,
    kContextFieldNumber = 3,
    kIdFieldNumber = 4,
  };
  // optional string schema_typename = 1;
  bool has_schema_typename() const;
  private:
  bool _internal_has_schema_typename() const;
  public:
  void clear_schema_typename();
  const std::string& schema_typename() const;
  template <typename ArgT0 = const std::string&, typename... ArgT>
  void set_schema_typename(ArgT0&& arg0, ArgT... args);
  std::string* mutable_schema_typename();
  PROTOBUF_NODISCARD std::string* release_schema_typename();
  void set_allocated_schema_typename(std::string* schema_typename);
  private:
  const std::string& _internal_schema_typename() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_schema_typename(const std::string& value);
  std::string* _internal_mutable_schema_typename();
  public:

  // optional string instance_name = 2;
  bool has_instance_name() const;
  private:
  bool _internal_has_instance_name() const;
  public:
  void clear_instance_name();
  const std::string& instance_name() const;
  template <typename ArgT0 = const std::string&, typename... ArgT>
  void set_instance_name(ArgT0&& arg0, ArgT... args);
  std::string* mutable_instance_name();
  PROTOBUF_NODISCARD std::string* release_instance_name();
  void set_allocated_instance_name(std::string* instance_name);
  private:
  const std::string& _internal_instance_name() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_instance_name(const std::string& value);
  std::string* _internal_mutable_instance_name();
  public:

  // optional uint64 context = 3;
  bool has_context() const;
  private:
  bool _internal_has_context() const;
  public:
  void clear_context();
  uint64_t context() const;
  void set_context(uint64_t value);
  private:
  uint64_t _internal_context() const;
  void _internal_set_context(uint64_t value);
  public:

  // optional uint64 id = 4;
  bool has_id() const;
  private:
  bool _internal_has_id() const;
  public:
  void clear_id();
  uint64_t id() const;
  void set_id(uint64_t value);
  private:
  uint64_t _internal_id() const;
  void _internal_set_id(uint64_t value);
  public:

  // @@protoc_insertion_point(class_scope:CMsgGCDev_SchemaReservationRequest)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
    mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
    ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr schema_typename_;
    ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr instance_name_;
    uint64_t context_;
    uint64_t id_;
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_econ_5fgcmessages_2eproto;
};
// -------------------------------------------------------------------

class CMsgCasketItem :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:CMsgCasketItem) */ {
 public:
  inline CMsgCasketItem() : CMsgCasketItem(nullptr) {}
  ~CMsgCasketItem() override;
  explicit PROTOBUF_CONSTEXPR CMsgCasketItem(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  CMsgCasketItem(const CMsgCasketItem& from);
  CMsgCasketItem(CMsgCasketItem&& from) noexcept
    : CMsgCasketItem() {
    *this = ::std::move(from);
  }

  inline CMsgCasketItem& operator=(const CMsgCasketItem& from) {
    CopyFrom(from);
    return *this;
  }
  inline CMsgCasketItem& operator=(CMsgCasketItem&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const CMsgCasketItem& default_instance() {
    return *internal_default_instance();
  }
  static inline const CMsgCasketItem* internal_default_instance() {
    return reinterpret_cast<const CMsgCasketItem*>(
               &_CMsgCasketItem_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    2;

  friend void swap(CMsgCasketItem& a, CMsgCasketItem& b) {
    a.Swap(&b);
  }
  inline void Swap(CMsgCasketItem* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CMsgCasketItem* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  CMsgCasketItem* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<CMsgCasketItem>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const CMsgCasketItem& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom( const CMsgCasketItem& from) {
    CMsgCasketItem::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::PROTOBUF_NAMESPACE_ID::Arena* arena, bool is_message_owned);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CMsgCasketItem* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "CMsgCasketItem";
  }
  protected:
  explicit CMsgCasketItem(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kCasketItemIdFieldNumber = 1,
    kItemItemIdFieldNumber = 2,
  };
  // optional uint64 casket_item_id = 1;
  bool has_casket_item_id() const;
  private:
  bool _internal_has_casket_item_id() const;
  public:
  void clear_casket_item_id();
  uint64_t casket_item_id() const;
  void set_casket_item_id(uint64_t value);
  private:
  uint64_t _internal_casket_item_id() const;
  void _internal_set_casket_item_id(uint64_t value);
  public:

  // optional uint64 item_item_id = 2;
  bool has_item_item_id() const;
  private:
  bool _internal_has_item_item_id() const;
  public:
  void clear_item_item_id();
  uint64_t item_item_id() const;
  void set_item_item_id(uint64_t value);
  private:
  uint64_t _internal_item_item_id() const;
  void _internal_set_item_item_id(uint64_t value);
  public:

  // @@protoc_insertion_point(class_scope:CMsgCasketItem)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
    mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
    uint64_t casket_item_id_;
    uint64_t item_item_id_;
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_econ_5fgcmessages_2eproto;
};
// -------------------------------------------------------------------

class CMsgGCUserTrackTimePlayedConsecutively :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:CMsgGCUserTrackTimePlayedConsecutively) */ {
 public:
  inline CMsgGCUserTrackTimePlayedConsecutively() : CMsgGCUserTrackTimePlayedConsecutively(nullptr) {}
  ~CMsgGCUserTrackTimePlayedConsecutively() override;
  explicit PROTOBUF_CONSTEXPR CMsgGCUserTrackTimePlayedConsecutively(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  CMsgGCUserTrackTimePlayedConsecutively(const CMsgGCUserTrackTimePlayedConsecutively& from);
  CMsgGCUserTrackTimePlayedConsecutively(CMsgGCUserTrackTimePlayedConsecutively&& from) noexcept
    : CMsgGCUserTrackTimePlayedConsecutively() {
    *this = ::std::move(from);
  }

  inline CMsgGCUserTrackTimePlayedConsecutively& operator=(const CMsgGCUserTrackTimePlayedConsecutively& from) {
    CopyFrom(from);
    return *this;
  }
  inline CMsgGCUserTrackTimePlayedConsecutively& operator=(CMsgGCUserTrackTimePlayedConsecutively&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const CMsgGCUserTrackTimePlayedConsecutively& default_instance() {
    return *internal_default_instance();
  }
  static inline const CMsgGCUserTrackTimePlayedConsecutively* internal_default_instance() {
    return reinterpret_cast<const CMsgGCUserTrackTimePlayedConsecutively*>(
               &_CMsgGCUserTrackTimePlayedConsecutively_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    3;

  friend void swap(CMsgGCUserTrackTimePlayedConsecutively& a, CMsgGCUserTrackTimePlayedConsecutively& b) {
    a.Swap(&b);
  }
  inline void Swap(CMsgGCUserTrackTimePlayedConsecutively* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CMsgGCUserTrackTimePlayedConsecutively* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  CMsgGCUserTrackTimePlayedConsecutively* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<CMsgGCUserTrackTimePlayedConsecutively>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const CMsgGCUserTrackTimePlayedConsecutively& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom( const CMsgGCUserTrackTimePlayedConsecutively& from) {
    CMsgGCUserTrackTimePlayedConsecutively::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::PROTOBUF_NAMESPACE_ID::Arena* arena, bool is_message_owned);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CMsgGCUserTrackTimePlayedConsecutively* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "CMsgGCUserTrackTimePlayedConsecutively";
  }
  protected:
  explicit CMsgGCUserTrackTimePlayedConsecutively(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kStateFieldNumber = 1,
  };
  // optional uint32 state = 1;
  bool has_state() const;
  private:
  bool _internal_has_state() const;
  public:
  void clear_state();
  uint32_t state() const;
  void set_state(uint32_t value);
  private:
  uint32_t _internal_state() const;
  void _internal_set_state(uint32_t value);
  public:

  // @@protoc_insertion_point(class_scope:CMsgGCUserTrackTimePlayedConsecutively)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
    mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
    uint32_t state_;
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_econ_5fgcmessages_2eproto;
};
// -------------------------------------------------------------------

class CMsgGCItemCustomizationNotification :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:CMsgGCItemCustomizationNotification) */ {
 public:
  inline CMsgGCItemCustomizationNotification() : CMsgGCItemCustomizationNotification(nullptr) {}
  ~CMsgGCItemCustomizationNotification() override;
  explicit PROTOBUF_CONSTEXPR CMsgGCItemCustomizationNotification(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  CMsgGCItemCustomizationNotification(const CMsgGCItemCustomizationNotification& from);
  CMsgGCItemCustomizationNotification(CMsgGCItemCustomizationNotification&& from) noexcept
    : CMsgGCItemCustomizationNotification() {
    *this = ::std::move(from);
  }

  inline CMsgGCItemCustomizationNotification& operator=(const CMsgGCItemCustomizationNotification& from) {
    CopyFrom(from);
    return *this;
  }
  inline CMsgGCItemCustomizationNotification& operator=(CMsgGCItemCustomizationNotification&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const CMsgGCItemCustomizationNotification& default_instance() {
    return *internal_default_instance();
  }
  static inline const CMsgGCItemCustomizationNotification* internal_default_instance() {
    return reinterpret_cast<const CMsgGCItemCustomizationNotification*>(
               &_CMsgGCItemCustomizationNotification_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    4;

  friend void swap(CMsgGCItemCustomizationNotification& a, CMsgGCItemCustomizationNotification& b) {
    a.Swap(&b);
  }
  inline void Swap(CMsgGCItemCustomizationNotification* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CMsgGCItemCustomizationNotification* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  CMsgGCItemCustomizationNotification* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<CMsgGCItemCustomizationNotification>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const CMsgGCItemCustomizationNotification& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom( const CMsgGCItemCustomizationNotification& from) {
    CMsgGCItemCustomizationNotification::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::PROTOBUF_NAMESPACE_ID::Arena* arena, bool is_message_owned);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CMsgGCItemCustomizationNotification* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "CMsgGCItemCustomizationNotification";
  }
  protected:
  explicit CMsgGCItemCustomizationNotification(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kItemIdFieldNumber = 1,
    kExtraDataFieldNumber = 3,
    kRequestFieldNumber = 2,
  };
  // repeated uint64 item_id = 1;
  int item_id_size() const;
  private:
  int _internal_item_id_size() const;
  public:
  void clear_item_id();
  private:
  uint64_t _internal_item_id(int index) const;
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField< uint64_t >&
      _internal_item_id() const;
  void _internal_add_item_id(uint64_t value);
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< uint64_t >*
      _internal_mutable_item_id();
  public:
  uint64_t item_id(int index) const;
  void set_item_id(int index, uint64_t value);
  void add_item_id(uint64_t value);
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField< uint64_t >&
      item_id() const;
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< uint64_t >*
      mutable_item_id();

  // repeated uint64 extra_data = 3;
  int extra_data_size() const;
  private:
  int _internal_extra_data_size() const;
  public:
  void clear_extra_data();
  private:
  uint64_t _internal_extra_data(int index) const;
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField< uint64_t >&
      _internal_extra_data() const;
  void _internal_add_extra_data(uint64_t value);
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< uint64_t >*
      _internal_mutable_extra_data();
  public:
  uint64_t extra_data(int index) const;
  void set_extra_data(int index, uint64_t value);
  void add_extra_data(uint64_t value);
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField< uint64_t >&
      extra_data() const;
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< uint64_t >*
      mutable_extra_data();

  // optional uint32 request = 2;
  bool has_request() const;
  private:
  bool _internal_has_request() const;
  public:
  void clear_request();
  uint32_t request() const;
  void set_request(uint32_t value);
  private:
  uint32_t _internal_request() const;
  void _internal_set_request(uint32_t value);
  public:

  // @@protoc_insertion_point(class_scope:CMsgGCItemCustomizationNotification)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
    mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
    ::PROTOBUF_NAMESPACE_ID::RepeatedField< uint64_t > item_id_;
    ::PROTOBUF_NAMESPACE_ID::RepeatedField< uint64_t > extra_data_;
    uint32_t request_;
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_econ_5fgcmessages_2eproto;
};
// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// CMsgGCGiftedItems

// optional uint32 accountid = 1;
inline bool CMsgGCGiftedItems::_internal_has_accountid() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool CMsgGCGiftedItems::has_accountid() const {
  return _internal_has_accountid();
}
inline void CMsgGCGiftedItems::clear_accountid() {
  _impl_.accountid_ = 0u;
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline uint32_t CMsgGCGiftedItems::_internal_accountid() const {
  return _impl_.accountid_;
}
inline uint32_t CMsgGCGiftedItems::accountid() const {
  // @@protoc_insertion_point(field_get:CMsgGCGiftedItems.accountid)
  return _internal_accountid();
}
inline void CMsgGCGiftedItems::_internal_set_accountid(uint32_t value) {
  _impl_._has_bits_[0] |= 0x00000001u;
  _impl_.accountid_ = value;
}
inline void CMsgGCGiftedItems::set_accountid(uint32_t value) {
  _internal_set_accountid(value);
  // @@protoc_insertion_point(field_set:CMsgGCGiftedItems.accountid)
}

// optional uint32 giftdefindex = 2;
inline bool CMsgGCGiftedItems::_internal_has_giftdefindex() const {
  bool value = (_impl_._has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline bool CMsgGCGiftedItems::has_giftdefindex() const {
  return _internal_has_giftdefindex();
}
inline void CMsgGCGiftedItems::clear_giftdefindex() {
  _impl_.giftdefindex_ = 0u;
  _impl_._has_bits_[0] &= ~0x00000002u;
}
inline uint32_t CMsgGCGiftedItems::_internal_giftdefindex() const {
  return _impl_.giftdefindex_;
}
inline uint32_t CMsgGCGiftedItems::giftdefindex() const {
  // @@protoc_insertion_point(field_get:CMsgGCGiftedItems.giftdefindex)
  return _internal_giftdefindex();
}
inline void CMsgGCGiftedItems::_internal_set_giftdefindex(uint32_t value) {
  _impl_._has_bits_[0] |= 0x00000002u;
  _impl_.giftdefindex_ = value;
}
inline void CMsgGCGiftedItems::set_giftdefindex(uint32_t value) {
  _internal_set_giftdefindex(value);
  // @@protoc_insertion_point(field_set:CMsgGCGiftedItems.giftdefindex)
}

// optional uint32 max_gifts_possible = 3;
inline bool CMsgGCGiftedItems::_internal_has_max_gifts_possible() const {
  bool value = (_impl_._has_bits_[0] & 0x00000004u) != 0;
  return value;
}
inline bool CMsgGCGiftedItems::has_max_gifts_possible() const {
  return _internal_has_max_gifts_possible();
}
inline void CMsgGCGiftedItems::clear_max_gifts_possible() {
  _impl_.max_gifts_possible_ = 0u;
  _impl_._has_bits_[0] &= ~0x00000004u;
}
inline uint32_t CMsgGCGiftedItems::_internal_max_gifts_possible() const {
  return _impl_.max_gifts_possible_;
}
inline uint32_t CMsgGCGiftedItems::max_gifts_possible() const {
  // @@protoc_insertion_point(field_get:CMsgGCGiftedItems.max_gifts_possible)
  return _internal_max_gifts_possible();
}
inline void CMsgGCGiftedItems::_internal_set_max_gifts_possible(uint32_t value) {
  _impl_._has_bits_[0] |= 0x00000004u;
  _impl_.max_gifts_possible_ = value;
}
inline void CMsgGCGiftedItems::set_max_gifts_possible(uint32_t value) {
  _internal_set_max_gifts_possible(value);
  // @@protoc_insertion_point(field_set:CMsgGCGiftedItems.max_gifts_possible)
}

// optional uint32 num_eligible_recipients = 4;
inline bool CMsgGCGiftedItems::_internal_has_num_eligible_recipients() const {
  bool value = (_impl_._has_bits_[0] & 0x00000008u) != 0;
  return value;
}
inline bool CMsgGCGiftedItems::has_num_eligible_recipients() const {
  return _internal_has_num_eligible_recipients();
}
inline void CMsgGCGiftedItems::clear_num_eligible_recipients() {
  _impl_.num_eligible_recipients_ = 0u;
  _impl_._has_bits_[0] &= ~0x00000008u;
}
inline uint32_t CMsgGCGiftedItems::_internal_num_eligible_recipients() const {
  return _impl_.num_eligible_recipients_;
}
inline uint32_t CMsgGCGiftedItems::num_eligible_recipients() const {
  // @@protoc_insertion_point(field_get:CMsgGCGiftedItems.num_eligible_recipients)
  return _internal_num_eligible_recipients();
}
inline void CMsgGCGiftedItems::_internal_set_num_eligible_recipients(uint32_t value) {
  _impl_._has_bits_[0] |= 0x00000008u;
  _impl_.num_eligible_recipients_ = value;
}
inline void CMsgGCGiftedItems::set_num_eligible_recipients(uint32_t value) {
  _internal_set_num_eligible_recipients(value);
  // @@protoc_insertion_point(field_set:CMsgGCGiftedItems.num_eligible_recipients)
}

// repeated uint32 recipients_accountids = 5;
inline int CMsgGCGiftedItems::_internal_recipients_accountids_size() const {
  return _impl_.recipients_accountids_.size();
}
inline int CMsgGCGiftedItems::recipients_accountids_size() const {
  return _internal_recipients_accountids_size();
}
inline void CMsgGCGiftedItems::clear_recipients_accountids() {
  _impl_.recipients_accountids_.Clear();
}
inline uint32_t CMsgGCGiftedItems::_internal_recipients_accountids(int index) const {
  return _impl_.recipients_accountids_.Get(index);
}
inline uint32_t CMsgGCGiftedItems::recipients_accountids(int index) const {
  // @@protoc_insertion_point(field_get:CMsgGCGiftedItems.recipients_accountids)
  return _internal_recipients_accountids(index);
}
inline void CMsgGCGiftedItems::set_recipients_accountids(int index, uint32_t value) {
  _impl_.recipients_accountids_.Set(index, value);
  // @@protoc_insertion_point(field_set:CMsgGCGiftedItems.recipients_accountids)
}
inline void CMsgGCGiftedItems::_internal_add_recipients_accountids(uint32_t value) {
  _impl_.recipients_accountids_.Add(value);
}
inline void CMsgGCGiftedItems::add_recipients_accountids(uint32_t value) {
  _internal_add_recipients_accountids(value);
  // @@protoc_insertion_point(field_add:CMsgGCGiftedItems.recipients_accountids)
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField< uint32_t >&
CMsgGCGiftedItems::_internal_recipients_accountids() const {
  return _impl_.recipients_accountids_;
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField< uint32_t >&
CMsgGCGiftedItems::recipients_accountids() const {
  // @@protoc_insertion_point(field_list:CMsgGCGiftedItems.recipients_accountids)
  return _internal_recipients_accountids();
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField< uint32_t >*
CMsgGCGiftedItems::_internal_mutable_recipients_accountids() {
  return &_impl_.recipients_accountids_;
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField< uint32_t >*
CMsgGCGiftedItems::mutable_recipients_accountids() {
  // @@protoc_insertion_point(field_mutable_list:CMsgGCGiftedItems.recipients_accountids)
  return _internal_mutable_recipients_accountids();
}

// -------------------------------------------------------------------

// CMsgGCDev_SchemaReservationRequest

// optional string schema_typename = 1;
inline bool CMsgGCDev_SchemaReservationRequest::_internal_has_schema_typename() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool CMsgGCDev_SchemaReservationRequest::has_schema_typename() const {
  return _internal_has_schema_typename();
}
inline void CMsgGCDev_SchemaReservationRequest::clear_schema_typename() {
  _impl_.schema_typename_.ClearToEmpty();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline const std::string& CMsgGCDev_SchemaReservationRequest::schema_typename() const {
  // @@protoc_insertion_point(field_get:CMsgGCDev_SchemaReservationRequest.schema_typename)
  return _internal_schema_typename();
}
template <typename ArgT0, typename... ArgT>
inline PROTOBUF_ALWAYS_INLINE
void CMsgGCDev_SchemaReservationRequest::set_schema_typename(ArgT0&& arg0, ArgT... args) {
 _impl_._has_bits_[0] |= 0x00000001u;
 _impl_.schema_typename_.Set(static_cast<ArgT0 &&>(arg0), args..., GetArenaForAllocation());
  // @@protoc_insertion_point(field_set:CMsgGCDev_SchemaReservationRequest.schema_typename)
}
inline std::string* CMsgGCDev_SchemaReservationRequest::mutable_schema_typename() {
  std::string* _s = _internal_mutable_schema_typename();
  // @@protoc_insertion_point(field_mutable:CMsgGCDev_SchemaReservationRequest.schema_typename)
  return _s;
}
inline const std::string& CMsgGCDev_SchemaReservationRequest::_internal_schema_typename() const {
  return _impl_.schema_typename_.Get();
}
inline void CMsgGCDev_SchemaReservationRequest::_internal_set_schema_typename(const std::string& value) {
  _impl_._has_bits_[0] |= 0x00000001u;
  _impl_.schema_typename_.Set(value, GetArenaForAllocation());
}
inline std::string* CMsgGCDev_SchemaReservationRequest::_internal_mutable_schema_typename() {
  _impl_._has_bits_[0] |= 0x00000001u;
  return _impl_.schema_typename_.Mutable(GetArenaForAllocation());
}
inline std::string* CMsgGCDev_SchemaReservationRequest::release_schema_typename() {
  // @@protoc_insertion_point(field_release:CMsgGCDev_SchemaReservationRequest.schema_typename)
  if (!_internal_has_schema_typename()) {
    return nullptr;
  }
  _impl_._has_bits_[0] &= ~0x00000001u;
  auto* p = _impl_.schema_typename_.Release();
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (_impl_.schema_typename_.IsDefault()) {
    _impl_.schema_typename_.Set("", GetArenaForAllocation());
  }
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  return p;
}
inline void CMsgGCDev_SchemaReservationRequest::set_allocated_schema_typename(std::string* schema_typename) {
  if (schema_typename != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  _impl_.schema_typename_.SetAllocated(schema_typename, GetArenaForAllocation());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (_impl_.schema_typename_.IsDefault()) {
    _impl_.schema_typename_.Set("", GetArenaForAllocation());
  }
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:CMsgGCDev_SchemaReservationRequest.schema_typename)
}

// optional string instance_name = 2;
inline bool CMsgGCDev_SchemaReservationRequest::_internal_has_instance_name() const {
  bool value = (_impl_._has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline bool CMsgGCDev_SchemaReservationRequest::has_instance_name() const {
  return _internal_has_instance_name();
}
inline void CMsgGCDev_SchemaReservationRequest::clear_instance_name() {
  _impl_.instance_name_.ClearToEmpty();
  _impl_._has_bits_[0] &= ~0x00000002u;
}
inline const std::string& CMsgGCDev_SchemaReservationRequest::instance_name() const {
  // @@protoc_insertion_point(field_get:CMsgGCDev_SchemaReservationRequest.instance_name)
  return _internal_instance_name();
}
template <typename ArgT0, typename... ArgT>
inline PROTOBUF_ALWAYS_INLINE
void CMsgGCDev_SchemaReservationRequest::set_instance_name(ArgT0&& arg0, ArgT... args) {
 _impl_._has_bits_[0] |= 0x00000002u;
 _impl_.instance_name_.Set(static_cast<ArgT0 &&>(arg0), args..., GetArenaForAllocation());
  // @@protoc_insertion_point(field_set:CMsgGCDev_SchemaReservationRequest.instance_name)
}
inline std::string* CMsgGCDev_SchemaReservationRequest::mutable_instance_name() {
  std::string* _s = _internal_mutable_instance_name();
  // @@protoc_insertion_point(field_mutable:CMsgGCDev_SchemaReservationRequest.instance_name)
  return _s;
}
inline const std::string& CMsgGCDev_SchemaReservationRequest::_internal_instance_name() const {
  return _impl_.instance_name_.Get();
}
inline void CMsgGCDev_SchemaReservationRequest::_internal_set_instance_name(const std::string& value) {
  _impl_._has_bits_[0] |= 0x00000002u;
  _impl_.instance_name_.Set(value, GetArenaForAllocation());
}
inline std::string* CMsgGCDev_SchemaReservationRequest::_internal_mutable_instance_name() {
  _impl_._has_bits_[0] |= 0x00000002u;
  return _impl_.instance_name_.Mutable(GetArenaForAllocation());
}
inline std::string* CMsgGCDev_SchemaReservationRequest::release_instance_name() {
  // @@protoc_insertion_point(field_release:CMsgGCDev_SchemaReservationRequest.instance_name)
  if (!_internal_has_instance_name()) {
    return nullptr;
  }
  _impl_._has_bits_[0] &= ~0x00000002u;
  auto* p = _impl_.instance_name_.Release();
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (_impl_.instance_name_.IsDefault()) {
    _impl_.instance_name_.Set("", GetArenaForAllocation());
  }
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  return p;
}
inline void CMsgGCDev_SchemaReservationRequest::set_allocated_instance_name(std::string* instance_name) {
  if (instance_name != nullptr) {
    _impl_._has_bits_[0] |= 0x00000002u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000002u;
  }
  _impl_.instance_name_.SetAllocated(instance_name, GetArenaForAllocation());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (_impl_.instance_name_.IsDefault()) {
    _impl_.instance_name_.Set("", GetArenaForAllocation());
  }
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:CMsgGCDev_SchemaReservationRequest.instance_name)
}

// optional uint64 context = 3;
inline bool CMsgGCDev_SchemaReservationRequest::_internal_has_context() const {
  bool value = (_impl_._has_bits_[0] & 0x00000004u) != 0;
  return value;
}
inline bool CMsgGCDev_SchemaReservationRequest::has_context() const {
  return _internal_has_context();
}
inline void CMsgGCDev_SchemaReservationRequest::clear_context() {
  _impl_.context_ = uint64_t{0u};
  _impl_._has_bits_[0] &= ~0x00000004u;
}
inline uint64_t CMsgGCDev_SchemaReservationRequest::_internal_context() const {
  return _impl_.context_;
}
inline uint64_t CMsgGCDev_SchemaReservationRequest::context() const {
  // @@protoc_insertion_point(field_get:CMsgGCDev_SchemaReservationRequest.context)
  return _internal_context();
}
inline void CMsgGCDev_SchemaReservationRequest::_internal_set_context(uint64_t value) {
  _impl_._has_bits_[0] |= 0x00000004u;
  _impl_.context_ = value;
}
inline void CMsgGCDev_SchemaReservationRequest::set_context(uint64_t value) {
  _internal_set_context(value);
  // @@protoc_insertion_point(field_set:CMsgGCDev_SchemaReservationRequest.context)
}

// optional uint64 id = 4;
inline bool CMsgGCDev_SchemaReservationRequest::_internal_has_id() const {
  bool value = (_impl_._has_bits_[0] & 0x00000008u) != 0;
  return value;
}
inline bool CMsgGCDev_SchemaReservationRequest::has_id() const {
  return _internal_has_id();
}
inline void CMsgGCDev_SchemaReservationRequest::clear_id() {
  _impl_.id_ = uint64_t{0u};
  _impl_._has_bits_[0] &= ~0x00000008u;
}
inline uint64_t CMsgGCDev_SchemaReservationRequest::_internal_id() const {
  return _impl_.id_;
}
inline uint64_t CMsgGCDev_SchemaReservationRequest::id() const {
  // @@protoc_insertion_point(field_get:CMsgGCDev_SchemaReservationRequest.id)
  return _internal_id();
}
inline void CMsgGCDev_SchemaReservationRequest::_internal_set_id(uint64_t value) {
  _impl_._has_bits_[0] |= 0x00000008u;
  _impl_.id_ = value;
}
inline void CMsgGCDev_SchemaReservationRequest::set_id(uint64_t value) {
  _internal_set_id(value);
  // @@protoc_insertion_point(field_set:CMsgGCDev_SchemaReservationRequest.id)
}

// -------------------------------------------------------------------

// CMsgCasketItem

// optional uint64 casket_item_id = 1;
inline bool CMsgCasketItem::_internal_has_casket_item_id() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool CMsgCasketItem::has_casket_item_id() const {
  return _internal_has_casket_item_id();
}
inline void CMsgCasketItem::clear_casket_item_id() {
  _impl_.casket_item_id_ = uint64_t{0u};
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline uint64_t CMsgCasketItem::_internal_casket_item_id() const {
  return _impl_.casket_item_id_;
}
inline uint64_t CMsgCasketItem::casket_item_id() const {
  // @@protoc_insertion_point(field_get:CMsgCasketItem.casket_item_id)
  return _internal_casket_item_id();
}
inline void CMsgCasketItem::_internal_set_casket_item_id(uint64_t value) {
  _impl_._has_bits_[0] |= 0x00000001u;
  _impl_.casket_item_id_ = value;
}
inline void CMsgCasketItem::set_casket_item_id(uint64_t value) {
  _internal_set_casket_item_id(value);
  // @@protoc_insertion_point(field_set:CMsgCasketItem.casket_item_id)
}

// optional uint64 item_item_id = 2;
inline bool CMsgCasketItem::_internal_has_item_item_id() const {
  bool value = (_impl_._has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline bool CMsgCasketItem::has_item_item_id() const {
  return _internal_has_item_item_id();
}
inline void CMsgCasketItem::clear_item_item_id() {
  _impl_.item_item_id_ = uint64_t{0u};
  _impl_._has_bits_[0] &= ~0x00000002u;
}
inline uint64_t CMsgCasketItem::_internal_item_item_id() const {
  return _impl_.item_item_id_;
}
inline uint64_t CMsgCasketItem::item_item_id() const {
  // @@protoc_insertion_point(field_get:CMsgCasketItem.item_item_id)
  return _internal_item_item_id();
}
inline void CMsgCasketItem::_internal_set_item_item_id(uint64_t value) {
  _impl_._has_bits_[0] |= 0x00000002u;
  _impl_.item_item_id_ = value;
}
inline void CMsgCasketItem::set_item_item_id(uint64_t value) {
  _internal_set_item_item_id(value);
  // @@protoc_insertion_point(field_set:CMsgCasketItem.item_item_id)
}

// -------------------------------------------------------------------

// CMsgGCUserTrackTimePlayedConsecutively

// optional uint32 state = 1;
inline bool CMsgGCUserTrackTimePlayedConsecutively::_internal_has_state() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool CMsgGCUserTrackTimePlayedConsecutively::has_state() const {
  return _internal_has_state();
}
inline void CMsgGCUserTrackTimePlayedConsecutively::clear_state() {
  _impl_.state_ = 0u;
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline uint32_t CMsgGCUserTrackTimePlayedConsecutively::_internal_state() const {
  return _impl_.state_;
}
inline uint32_t CMsgGCUserTrackTimePlayedConsecutively::state() const {
  // @@protoc_insertion_point(field_get:CMsgGCUserTrackTimePlayedConsecutively.state)
  return _internal_state();
}
inline void CMsgGCUserTrackTimePlayedConsecutively::_internal_set_state(uint32_t value) {
  _impl_._has_bits_[0] |= 0x00000001u;
  _impl_.state_ = value;
}
inline void CMsgGCUserTrackTimePlayedConsecutively::set_state(uint32_t value) {
  _internal_set_state(value);
  // @@protoc_insertion_point(field_set:CMsgGCUserTrackTimePlayedConsecutively.state)
}

// -------------------------------------------------------------------

// CMsgGCItemCustomizationNotification

// repeated uint64 item_id = 1;
inline int CMsgGCItemCustomizationNotification::_internal_item_id_size() const {
  return _impl_.item_id_.size();
}
inline int CMsgGCItemCustomizationNotification::item_id_size() const {
  return _internal_item_id_size();
}
inline void CMsgGCItemCustomizationNotification::clear_item_id() {
  _impl_.item_id_.Clear();
}
inline uint64_t CMsgGCItemCustomizationNotification::_internal_item_id(int index) const {
  return _impl_.item_id_.Get(index);
}
inline uint64_t CMsgGCItemCustomizationNotification::item_id(int index) const {
  // @@protoc_insertion_point(field_get:CMsgGCItemCustomizationNotification.item_id)
  return _internal_item_id(index);
}
inline void CMsgGCItemCustomizationNotification::set_item_id(int index, uint64_t value) {
  _impl_.item_id_.Set(index, value);
  // @@protoc_insertion_point(field_set:CMsgGCItemCustomizationNotification.item_id)
}
inline void CMsgGCItemCustomizationNotification::_internal_add_item_id(uint64_t value) {
  _impl_.item_id_.Add(value);
}
inline void CMsgGCItemCustomizationNotification::add_item_id(uint64_t value) {
  _internal_add_item_id(value);
  // @@protoc_insertion_point(field_add:CMsgGCItemCustomizationNotification.item_id)
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField< uint64_t >&
CMsgGCItemCustomizationNotification::_internal_item_id() const {
  return _impl_.item_id_;
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField< uint64_t >&
CMsgGCItemCustomizationNotification::item_id() const {
  // @@protoc_insertion_point(field_list:CMsgGCItemCustomizationNotification.item_id)
  return _internal_item_id();
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField< uint64_t >*
CMsgGCItemCustomizationNotification::_internal_mutable_item_id() {
  return &_impl_.item_id_;
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField< uint64_t >*
CMsgGCItemCustomizationNotification::mutable_item_id() {
  // @@protoc_insertion_point(field_mutable_list:CMsgGCItemCustomizationNotification.item_id)
  return _internal_mutable_item_id();
}

// optional uint32 request = 2;
inline bool CMsgGCItemCustomizationNotification::_internal_has_request() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool CMsgGCItemCustomizationNotification::has_request() const {
  return _internal_has_request();
}
inline void CMsgGCItemCustomizationNotification::clear_request() {
  _impl_.request_ = 0u;
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline uint32_t CMsgGCItemCustomizationNotification::_internal_request() const {
  return _impl_.request_;
}
inline uint32_t CMsgGCItemCustomizationNotification::request() const {
  // @@protoc_insertion_point(field_get:CMsgGCItemCustomizationNotification.request)
  return _internal_request();
}
inline void CMsgGCItemCustomizationNotification::_internal_set_request(uint32_t value) {
  _impl_._has_bits_[0] |= 0x00000001u;
  _impl_.request_ = value;
}
inline void CMsgGCItemCustomizationNotification::set_request(uint32_t value) {
  _internal_set_request(value);
  // @@protoc_insertion_point(field_set:CMsgGCItemCustomizationNotification.request)
}

// repeated uint64 extra_data = 3;
inline int CMsgGCItemCustomizationNotification::_internal_extra_data_size() const {
  return _impl_.extra_data_.size();
}
inline int CMsgGCItemCustomizationNotification::extra_data_size() const {
  return _internal_extra_data_size();
}
inline void CMsgGCItemCustomizationNotification::clear_extra_data() {
  _impl_.extra_data_.Clear();
}
inline uint64_t CMsgGCItemCustomizationNotification::_internal_extra_data(int index) const {
  return _impl_.extra_data_.Get(index);
}
inline uint64_t CMsgGCItemCustomizationNotification::extra_data(int index) const {
  // @@protoc_insertion_point(field_get:CMsgGCItemCustomizationNotification.extra_data)
  return _internal_extra_data(index);
}
inline void CMsgGCItemCustomizationNotification::set_extra_data(int index, uint64_t value) {
  _impl_.extra_data_.Set(index, value);
  // @@protoc_insertion_point(field_set:CMsgGCItemCustomizationNotification.extra_data)
}
inline void CMsgGCItemCustomizationNotification::_internal_add_extra_data(uint64_t value) {
  _impl_.extra_data_.Add(value);
}
inline void CMsgGCItemCustomizationNotification::add_extra_data(uint64_t value) {
  _internal_add_extra_data(value);
  // @@protoc_insertion_point(field_add:CMsgGCItemCustomizationNotification.extra_data)
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField< uint64_t >&
CMsgGCItemCustomizationNotification::_internal_extra_data() const {
  return _impl_.extra_data_;
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField< uint64_t >&
CMsgGCItemCustomizationNotification::extra_data() const {
  // @@protoc_insertion_point(field_list:CMsgGCItemCustomizationNotification.extra_data)
  return _internal_extra_data();
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField< uint64_t >*
CMsgGCItemCustomizationNotification::_internal_mutable_extra_data() {
  return &_impl_.extra_data_;
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField< uint64_t >*
CMsgGCItemCustomizationNotification::mutable_extra_data() {
  // @@protoc_insertion_point(field_mutable_list:CMsgGCItemCustomizationNotification.extra_data)
  return _internal_mutable_extra_data();
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__
// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)


PROTOBUF_NAMESPACE_OPEN

template <> struct is_proto_enum< ::EGCItemMsg> : ::std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::EGCItemMsg>() {
  return ::EGCItemMsg_descriptor();
}
template <> struct is_proto_enum< ::EGCMsgResponse> : ::std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::EGCMsgResponse>() {
  return ::EGCMsgResponse_descriptor();
}
template <> struct is_proto_enum< ::EUnlockStyle> : ::std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::EUnlockStyle>() {
  return ::EUnlockStyle_descriptor();
}
template <> struct is_proto_enum< ::EGCItemCustomizationNotification> : ::std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::EGCItemCustomizationNotification>() {
  return ::EGCItemCustomizationNotification_descriptor();
}

PROTOBUF_NAMESPACE_CLOSE

// @@protoc_insertion_point(global_scope)

#include <google/protobuf/port_undef.inc>
#endif  // GOOGLE_PROTOBUF_INCLUDED_GOOGLE_PROTOBUF_INCLUDED_econ_5fgcmessages_2eproto
