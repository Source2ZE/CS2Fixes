// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: prediction_events.proto

#ifndef GOOGLE_PROTOBUF_INCLUDED_prediction_5fevents_2eproto
#define GOOGLE_PROTOBUF_INCLUDED_prediction_5fevents_2eproto

#include <limits>
#include <string>

#include <google/protobuf/port_def.inc>
#if PROTOBUF_VERSION < 3021000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers. Please update
#error your headers.
#endif
#if 3021008 < PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers. Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/port_undef.inc>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata_lite.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/generated_enum_reflection.h>
#include <google/protobuf/unknown_field_set.h>
#include "networkbasetypes.pb.h"
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>
#define PROTOBUF_INTERNAL_EXPORT_prediction_5fevents_2eproto
PROTOBUF_NAMESPACE_OPEN
namespace internal {
class AnyMetadata;
}  // namespace internal
PROTOBUF_NAMESPACE_CLOSE

// Internal implementation detail -- do not use these members.
struct TableStruct_prediction_5fevents_2eproto {
  static const uint32_t offsets[];
};
extern const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable descriptor_table_prediction_5fevents_2eproto;
class CPredictionEvent_Diagnostic;
struct CPredictionEvent_DiagnosticDefaultTypeInternal;
extern CPredictionEvent_DiagnosticDefaultTypeInternal _CPredictionEvent_Diagnostic_default_instance_;
class CPredictionEvent_StringCommand;
struct CPredictionEvent_StringCommandDefaultTypeInternal;
extern CPredictionEvent_StringCommandDefaultTypeInternal _CPredictionEvent_StringCommand_default_instance_;
class CPredictionEvent_Teleport;
struct CPredictionEvent_TeleportDefaultTypeInternal;
extern CPredictionEvent_TeleportDefaultTypeInternal _CPredictionEvent_Teleport_default_instance_;
PROTOBUF_NAMESPACE_OPEN
template<> ::CPredictionEvent_Diagnostic* Arena::CreateMaybeMessage<::CPredictionEvent_Diagnostic>(Arena*);
template<> ::CPredictionEvent_StringCommand* Arena::CreateMaybeMessage<::CPredictionEvent_StringCommand>(Arena*);
template<> ::CPredictionEvent_Teleport* Arena::CreateMaybeMessage<::CPredictionEvent_Teleport>(Arena*);
PROTOBUF_NAMESPACE_CLOSE

enum EBasePredictionEvents : int {
  BPE_StringCommand = 128,
  BPE_Teleport = 130,
  BPE_Diagnostic = 16384
};
bool EBasePredictionEvents_IsValid(int value);
constexpr EBasePredictionEvents EBasePredictionEvents_MIN = BPE_StringCommand;
constexpr EBasePredictionEvents EBasePredictionEvents_MAX = BPE_Diagnostic;
constexpr int EBasePredictionEvents_ARRAYSIZE = EBasePredictionEvents_MAX + 1;

const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* EBasePredictionEvents_descriptor();
template<typename T>
inline const std::string& EBasePredictionEvents_Name(T enum_t_value) {
  static_assert(::std::is_same<T, EBasePredictionEvents>::value ||
    ::std::is_integral<T>::value,
    "Incorrect type passed to function EBasePredictionEvents_Name.");
  return ::PROTOBUF_NAMESPACE_ID::internal::NameOfEnum(
    EBasePredictionEvents_descriptor(), enum_t_value);
}
inline bool EBasePredictionEvents_Parse(
    ::PROTOBUF_NAMESPACE_ID::ConstStringParam name, EBasePredictionEvents* value) {
  return ::PROTOBUF_NAMESPACE_ID::internal::ParseNamedEnum<EBasePredictionEvents>(
    EBasePredictionEvents_descriptor(), name, value);
}
// ===================================================================

class CPredictionEvent_Teleport :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:CPredictionEvent_Teleport) */ {
 public:
  inline CPredictionEvent_Teleport() : CPredictionEvent_Teleport(nullptr) {}
  ~CPredictionEvent_Teleport() override;
  explicit PROTOBUF_CONSTEXPR CPredictionEvent_Teleport(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  CPredictionEvent_Teleport(const CPredictionEvent_Teleport& from);
  CPredictionEvent_Teleport(CPredictionEvent_Teleport&& from) noexcept
    : CPredictionEvent_Teleport() {
    *this = ::std::move(from);
  }

  inline CPredictionEvent_Teleport& operator=(const CPredictionEvent_Teleport& from) {
    CopyFrom(from);
    return *this;
  }
  inline CPredictionEvent_Teleport& operator=(CPredictionEvent_Teleport&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const CPredictionEvent_Teleport& default_instance() {
    return *internal_default_instance();
  }
  static inline const CPredictionEvent_Teleport* internal_default_instance() {
    return reinterpret_cast<const CPredictionEvent_Teleport*>(
               &_CPredictionEvent_Teleport_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    0;

  friend void swap(CPredictionEvent_Teleport& a, CPredictionEvent_Teleport& b) {
    a.Swap(&b);
  }
  inline void Swap(CPredictionEvent_Teleport* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CPredictionEvent_Teleport* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  CPredictionEvent_Teleport* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<CPredictionEvent_Teleport>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const CPredictionEvent_Teleport& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom( const CPredictionEvent_Teleport& from) {
    CPredictionEvent_Teleport::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::PROTOBUF_NAMESPACE_ID::Arena* arena, bool is_message_owned);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CPredictionEvent_Teleport* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "CPredictionEvent_Teleport";
  }
  protected:
  explicit CPredictionEvent_Teleport(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kOriginFieldNumber = 1,
    kAnglesFieldNumber = 2,
    kDropToGroundRangeFieldNumber = 3,
  };
  // optional .CMsgVector origin = 1;
  bool has_origin() const;
  private:
  bool _internal_has_origin() const;
  public:
  void clear_origin();
  const ::CMsgVector& origin() const;
  PROTOBUF_NODISCARD ::CMsgVector* release_origin();
  ::CMsgVector* mutable_origin();
  void set_allocated_origin(::CMsgVector* origin);
  private:
  const ::CMsgVector& _internal_origin() const;
  ::CMsgVector* _internal_mutable_origin();
  public:
  void unsafe_arena_set_allocated_origin(
      ::CMsgVector* origin);
  ::CMsgVector* unsafe_arena_release_origin();

  // optional .CMsgQAngle angles = 2;
  bool has_angles() const;
  private:
  bool _internal_has_angles() const;
  public:
  void clear_angles();
  const ::CMsgQAngle& angles() const;
  PROTOBUF_NODISCARD ::CMsgQAngle* release_angles();
  ::CMsgQAngle* mutable_angles();
  void set_allocated_angles(::CMsgQAngle* angles);
  private:
  const ::CMsgQAngle& _internal_angles() const;
  ::CMsgQAngle* _internal_mutable_angles();
  public:
  void unsafe_arena_set_allocated_angles(
      ::CMsgQAngle* angles);
  ::CMsgQAngle* unsafe_arena_release_angles();

  // optional float drop_to_ground_range = 3;
  bool has_drop_to_ground_range() const;
  private:
  bool _internal_has_drop_to_ground_range() const;
  public:
  void clear_drop_to_ground_range();
  float drop_to_ground_range() const;
  void set_drop_to_ground_range(float value);
  private:
  float _internal_drop_to_ground_range() const;
  void _internal_set_drop_to_ground_range(float value);
  public:

  // @@protoc_insertion_point(class_scope:CPredictionEvent_Teleport)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
    mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
    ::CMsgVector* origin_;
    ::CMsgQAngle* angles_;
    float drop_to_ground_range_;
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_prediction_5fevents_2eproto;
};
// -------------------------------------------------------------------

class CPredictionEvent_StringCommand :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:CPredictionEvent_StringCommand) */ {
 public:
  inline CPredictionEvent_StringCommand() : CPredictionEvent_StringCommand(nullptr) {}
  ~CPredictionEvent_StringCommand() override;
  explicit PROTOBUF_CONSTEXPR CPredictionEvent_StringCommand(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  CPredictionEvent_StringCommand(const CPredictionEvent_StringCommand& from);
  CPredictionEvent_StringCommand(CPredictionEvent_StringCommand&& from) noexcept
    : CPredictionEvent_StringCommand() {
    *this = ::std::move(from);
  }

  inline CPredictionEvent_StringCommand& operator=(const CPredictionEvent_StringCommand& from) {
    CopyFrom(from);
    return *this;
  }
  inline CPredictionEvent_StringCommand& operator=(CPredictionEvent_StringCommand&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const CPredictionEvent_StringCommand& default_instance() {
    return *internal_default_instance();
  }
  static inline const CPredictionEvent_StringCommand* internal_default_instance() {
    return reinterpret_cast<const CPredictionEvent_StringCommand*>(
               &_CPredictionEvent_StringCommand_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    1;

  friend void swap(CPredictionEvent_StringCommand& a, CPredictionEvent_StringCommand& b) {
    a.Swap(&b);
  }
  inline void Swap(CPredictionEvent_StringCommand* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CPredictionEvent_StringCommand* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  CPredictionEvent_StringCommand* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<CPredictionEvent_StringCommand>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const CPredictionEvent_StringCommand& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom( const CPredictionEvent_StringCommand& from) {
    CPredictionEvent_StringCommand::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::PROTOBUF_NAMESPACE_ID::Arena* arena, bool is_message_owned);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CPredictionEvent_StringCommand* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "CPredictionEvent_StringCommand";
  }
  protected:
  explicit CPredictionEvent_StringCommand(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kCommandFieldNumber = 1,
  };
  // optional string command = 1;
  bool has_command() const;
  private:
  bool _internal_has_command() const;
  public:
  void clear_command();
  const std::string& command() const;
  template <typename ArgT0 = const std::string&, typename... ArgT>
  void set_command(ArgT0&& arg0, ArgT... args);
  std::string* mutable_command();
  PROTOBUF_NODISCARD std::string* release_command();
  void set_allocated_command(std::string* command);
  private:
  const std::string& _internal_command() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_command(const std::string& value);
  std::string* _internal_mutable_command();
  public:

  // @@protoc_insertion_point(class_scope:CPredictionEvent_StringCommand)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
    mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
    ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr command_;
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_prediction_5fevents_2eproto;
};
// -------------------------------------------------------------------

class CPredictionEvent_Diagnostic :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:CPredictionEvent_Diagnostic) */ {
 public:
  inline CPredictionEvent_Diagnostic() : CPredictionEvent_Diagnostic(nullptr) {}
  ~CPredictionEvent_Diagnostic() override;
  explicit PROTOBUF_CONSTEXPR CPredictionEvent_Diagnostic(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  CPredictionEvent_Diagnostic(const CPredictionEvent_Diagnostic& from);
  CPredictionEvent_Diagnostic(CPredictionEvent_Diagnostic&& from) noexcept
    : CPredictionEvent_Diagnostic() {
    *this = ::std::move(from);
  }

  inline CPredictionEvent_Diagnostic& operator=(const CPredictionEvent_Diagnostic& from) {
    CopyFrom(from);
    return *this;
  }
  inline CPredictionEvent_Diagnostic& operator=(CPredictionEvent_Diagnostic&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const CPredictionEvent_Diagnostic& default_instance() {
    return *internal_default_instance();
  }
  static inline const CPredictionEvent_Diagnostic* internal_default_instance() {
    return reinterpret_cast<const CPredictionEvent_Diagnostic*>(
               &_CPredictionEvent_Diagnostic_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    2;

  friend void swap(CPredictionEvent_Diagnostic& a, CPredictionEvent_Diagnostic& b) {
    a.Swap(&b);
  }
  inline void Swap(CPredictionEvent_Diagnostic* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CPredictionEvent_Diagnostic* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  CPredictionEvent_Diagnostic* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<CPredictionEvent_Diagnostic>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const CPredictionEvent_Diagnostic& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom( const CPredictionEvent_Diagnostic& from) {
    CPredictionEvent_Diagnostic::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::PROTOBUF_NAMESPACE_ID::Arena* arena, bool is_message_owned);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CPredictionEvent_Diagnostic* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "CPredictionEvent_Diagnostic";
  }
  protected:
  explicit CPredictionEvent_Diagnostic(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kExecutionSyncFieldNumber = 4,
    kIdFieldNumber = 1,
    kRequestedSyncFieldNumber = 2,
    kRequestedPlayerIndexFieldNumber = 3,
  };
  // repeated uint32 execution_sync = 4;
  int execution_sync_size() const;
  private:
  int _internal_execution_sync_size() const;
  public:
  void clear_execution_sync();
  private:
  uint32_t _internal_execution_sync(int index) const;
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField< uint32_t >&
      _internal_execution_sync() const;
  void _internal_add_execution_sync(uint32_t value);
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< uint32_t >*
      _internal_mutable_execution_sync();
  public:
  uint32_t execution_sync(int index) const;
  void set_execution_sync(int index, uint32_t value);
  void add_execution_sync(uint32_t value);
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField< uint32_t >&
      execution_sync() const;
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< uint32_t >*
      mutable_execution_sync();

  // optional uint32 id = 1;
  bool has_id() const;
  private:
  bool _internal_has_id() const;
  public:
  void clear_id();
  uint32_t id() const;
  void set_id(uint32_t value);
  private:
  uint32_t _internal_id() const;
  void _internal_set_id(uint32_t value);
  public:

  // optional uint32 requested_sync = 2;
  bool has_requested_sync() const;
  private:
  bool _internal_has_requested_sync() const;
  public:
  void clear_requested_sync();
  uint32_t requested_sync() const;
  void set_requested_sync(uint32_t value);
  private:
  uint32_t _internal_requested_sync() const;
  void _internal_set_requested_sync(uint32_t value);
  public:

  // optional uint32 requested_player_index = 3;
  bool has_requested_player_index() const;
  private:
  bool _internal_has_requested_player_index() const;
  public:
  void clear_requested_player_index();
  uint32_t requested_player_index() const;
  void set_requested_player_index(uint32_t value);
  private:
  uint32_t _internal_requested_player_index() const;
  void _internal_set_requested_player_index(uint32_t value);
  public:

  // @@protoc_insertion_point(class_scope:CPredictionEvent_Diagnostic)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
    mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
    ::PROTOBUF_NAMESPACE_ID::RepeatedField< uint32_t > execution_sync_;
    uint32_t id_;
    uint32_t requested_sync_;
    uint32_t requested_player_index_;
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_prediction_5fevents_2eproto;
};
// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// CPredictionEvent_Teleport

// optional .CMsgVector origin = 1;
inline bool CPredictionEvent_Teleport::_internal_has_origin() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.origin_ != nullptr);
  return value;
}
inline bool CPredictionEvent_Teleport::has_origin() const {
  return _internal_has_origin();
}
inline const ::CMsgVector& CPredictionEvent_Teleport::_internal_origin() const {
  const ::CMsgVector* p = _impl_.origin_;
  return p != nullptr ? *p : reinterpret_cast<const ::CMsgVector&>(
      ::_CMsgVector_default_instance_);
}
inline const ::CMsgVector& CPredictionEvent_Teleport::origin() const {
  // @@protoc_insertion_point(field_get:CPredictionEvent_Teleport.origin)
  return _internal_origin();
}
inline void CPredictionEvent_Teleport::unsafe_arena_set_allocated_origin(
    ::CMsgVector* origin) {
  if (GetArenaForAllocation() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(_impl_.origin_);
  }
  _impl_.origin_ = origin;
  if (origin) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:CPredictionEvent_Teleport.origin)
}
inline ::CMsgVector* CPredictionEvent_Teleport::release_origin() {
  _impl_._has_bits_[0] &= ~0x00000001u;
  ::CMsgVector* temp = _impl_.origin_;
  _impl_.origin_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old =  reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(temp);
  temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  if (GetArenaForAllocation() == nullptr) { delete old; }
#else  // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArenaForAllocation() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return temp;
}
inline ::CMsgVector* CPredictionEvent_Teleport::unsafe_arena_release_origin() {
  // @@protoc_insertion_point(field_release:CPredictionEvent_Teleport.origin)
  _impl_._has_bits_[0] &= ~0x00000001u;
  ::CMsgVector* temp = _impl_.origin_;
  _impl_.origin_ = nullptr;
  return temp;
}
inline ::CMsgVector* CPredictionEvent_Teleport::_internal_mutable_origin() {
  _impl_._has_bits_[0] |= 0x00000001u;
  if (_impl_.origin_ == nullptr) {
    auto* p = CreateMaybeMessage<::CMsgVector>(GetArenaForAllocation());
    _impl_.origin_ = p;
  }
  return _impl_.origin_;
}
inline ::CMsgVector* CPredictionEvent_Teleport::mutable_origin() {
  ::CMsgVector* _msg = _internal_mutable_origin();
  // @@protoc_insertion_point(field_mutable:CPredictionEvent_Teleport.origin)
  return _msg;
}
inline void CPredictionEvent_Teleport::set_allocated_origin(::CMsgVector* origin) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(_impl_.origin_);
  }
  if (origin) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
        ::PROTOBUF_NAMESPACE_ID::Arena::InternalGetOwningArena(
                reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(origin));
    if (message_arena != submessage_arena) {
      origin = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, origin, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  _impl_.origin_ = origin;
  // @@protoc_insertion_point(field_set_allocated:CPredictionEvent_Teleport.origin)
}

// optional .CMsgQAngle angles = 2;
inline bool CPredictionEvent_Teleport::_internal_has_angles() const {
  bool value = (_impl_._has_bits_[0] & 0x00000002u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.angles_ != nullptr);
  return value;
}
inline bool CPredictionEvent_Teleport::has_angles() const {
  return _internal_has_angles();
}
inline const ::CMsgQAngle& CPredictionEvent_Teleport::_internal_angles() const {
  const ::CMsgQAngle* p = _impl_.angles_;
  return p != nullptr ? *p : reinterpret_cast<const ::CMsgQAngle&>(
      ::_CMsgQAngle_default_instance_);
}
inline const ::CMsgQAngle& CPredictionEvent_Teleport::angles() const {
  // @@protoc_insertion_point(field_get:CPredictionEvent_Teleport.angles)
  return _internal_angles();
}
inline void CPredictionEvent_Teleport::unsafe_arena_set_allocated_angles(
    ::CMsgQAngle* angles) {
  if (GetArenaForAllocation() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(_impl_.angles_);
  }
  _impl_.angles_ = angles;
  if (angles) {
    _impl_._has_bits_[0] |= 0x00000002u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000002u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:CPredictionEvent_Teleport.angles)
}
inline ::CMsgQAngle* CPredictionEvent_Teleport::release_angles() {
  _impl_._has_bits_[0] &= ~0x00000002u;
  ::CMsgQAngle* temp = _impl_.angles_;
  _impl_.angles_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old =  reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(temp);
  temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  if (GetArenaForAllocation() == nullptr) { delete old; }
#else  // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArenaForAllocation() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return temp;
}
inline ::CMsgQAngle* CPredictionEvent_Teleport::unsafe_arena_release_angles() {
  // @@protoc_insertion_point(field_release:CPredictionEvent_Teleport.angles)
  _impl_._has_bits_[0] &= ~0x00000002u;
  ::CMsgQAngle* temp = _impl_.angles_;
  _impl_.angles_ = nullptr;
  return temp;
}
inline ::CMsgQAngle* CPredictionEvent_Teleport::_internal_mutable_angles() {
  _impl_._has_bits_[0] |= 0x00000002u;
  if (_impl_.angles_ == nullptr) {
    auto* p = CreateMaybeMessage<::CMsgQAngle>(GetArenaForAllocation());
    _impl_.angles_ = p;
  }
  return _impl_.angles_;
}
inline ::CMsgQAngle* CPredictionEvent_Teleport::mutable_angles() {
  ::CMsgQAngle* _msg = _internal_mutable_angles();
  // @@protoc_insertion_point(field_mutable:CPredictionEvent_Teleport.angles)
  return _msg;
}
inline void CPredictionEvent_Teleport::set_allocated_angles(::CMsgQAngle* angles) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(_impl_.angles_);
  }
  if (angles) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
        ::PROTOBUF_NAMESPACE_ID::Arena::InternalGetOwningArena(
                reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(angles));
    if (message_arena != submessage_arena) {
      angles = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, angles, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000002u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000002u;
  }
  _impl_.angles_ = angles;
  // @@protoc_insertion_point(field_set_allocated:CPredictionEvent_Teleport.angles)
}

// optional float drop_to_ground_range = 3;
inline bool CPredictionEvent_Teleport::_internal_has_drop_to_ground_range() const {
  bool value = (_impl_._has_bits_[0] & 0x00000004u) != 0;
  return value;
}
inline bool CPredictionEvent_Teleport::has_drop_to_ground_range() const {
  return _internal_has_drop_to_ground_range();
}
inline void CPredictionEvent_Teleport::clear_drop_to_ground_range() {
  _impl_.drop_to_ground_range_ = 0;
  _impl_._has_bits_[0] &= ~0x00000004u;
}
inline float CPredictionEvent_Teleport::_internal_drop_to_ground_range() const {
  return _impl_.drop_to_ground_range_;
}
inline float CPredictionEvent_Teleport::drop_to_ground_range() const {
  // @@protoc_insertion_point(field_get:CPredictionEvent_Teleport.drop_to_ground_range)
  return _internal_drop_to_ground_range();
}
inline void CPredictionEvent_Teleport::_internal_set_drop_to_ground_range(float value) {
  _impl_._has_bits_[0] |= 0x00000004u;
  _impl_.drop_to_ground_range_ = value;
}
inline void CPredictionEvent_Teleport::set_drop_to_ground_range(float value) {
  _internal_set_drop_to_ground_range(value);
  // @@protoc_insertion_point(field_set:CPredictionEvent_Teleport.drop_to_ground_range)
}

// -------------------------------------------------------------------

// CPredictionEvent_StringCommand

// optional string command = 1;
inline bool CPredictionEvent_StringCommand::_internal_has_command() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool CPredictionEvent_StringCommand::has_command() const {
  return _internal_has_command();
}
inline void CPredictionEvent_StringCommand::clear_command() {
  _impl_.command_.ClearToEmpty();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline const std::string& CPredictionEvent_StringCommand::command() const {
  // @@protoc_insertion_point(field_get:CPredictionEvent_StringCommand.command)
  return _internal_command();
}
template <typename ArgT0, typename... ArgT>
inline PROTOBUF_ALWAYS_INLINE
void CPredictionEvent_StringCommand::set_command(ArgT0&& arg0, ArgT... args) {
 _impl_._has_bits_[0] |= 0x00000001u;
 _impl_.command_.Set(static_cast<ArgT0 &&>(arg0), args..., GetArenaForAllocation());
  // @@protoc_insertion_point(field_set:CPredictionEvent_StringCommand.command)
}
inline std::string* CPredictionEvent_StringCommand::mutable_command() {
  std::string* _s = _internal_mutable_command();
  // @@protoc_insertion_point(field_mutable:CPredictionEvent_StringCommand.command)
  return _s;
}
inline const std::string& CPredictionEvent_StringCommand::_internal_command() const {
  return _impl_.command_.Get();
}
inline void CPredictionEvent_StringCommand::_internal_set_command(const std::string& value) {
  _impl_._has_bits_[0] |= 0x00000001u;
  _impl_.command_.Set(value, GetArenaForAllocation());
}
inline std::string* CPredictionEvent_StringCommand::_internal_mutable_command() {
  _impl_._has_bits_[0] |= 0x00000001u;
  return _impl_.command_.Mutable(GetArenaForAllocation());
}
inline std::string* CPredictionEvent_StringCommand::release_command() {
  // @@protoc_insertion_point(field_release:CPredictionEvent_StringCommand.command)
  if (!_internal_has_command()) {
    return nullptr;
  }
  _impl_._has_bits_[0] &= ~0x00000001u;
  auto* p = _impl_.command_.Release();
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (_impl_.command_.IsDefault()) {
    _impl_.command_.Set("", GetArenaForAllocation());
  }
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  return p;
}
inline void CPredictionEvent_StringCommand::set_allocated_command(std::string* command) {
  if (command != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  _impl_.command_.SetAllocated(command, GetArenaForAllocation());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (_impl_.command_.IsDefault()) {
    _impl_.command_.Set("", GetArenaForAllocation());
  }
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:CPredictionEvent_StringCommand.command)
}

// -------------------------------------------------------------------

// CPredictionEvent_Diagnostic

// optional uint32 id = 1;
inline bool CPredictionEvent_Diagnostic::_internal_has_id() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool CPredictionEvent_Diagnostic::has_id() const {
  return _internal_has_id();
}
inline void CPredictionEvent_Diagnostic::clear_id() {
  _impl_.id_ = 0u;
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline uint32_t CPredictionEvent_Diagnostic::_internal_id() const {
  return _impl_.id_;
}
inline uint32_t CPredictionEvent_Diagnostic::id() const {
  // @@protoc_insertion_point(field_get:CPredictionEvent_Diagnostic.id)
  return _internal_id();
}
inline void CPredictionEvent_Diagnostic::_internal_set_id(uint32_t value) {
  _impl_._has_bits_[0] |= 0x00000001u;
  _impl_.id_ = value;
}
inline void CPredictionEvent_Diagnostic::set_id(uint32_t value) {
  _internal_set_id(value);
  // @@protoc_insertion_point(field_set:CPredictionEvent_Diagnostic.id)
}

// optional uint32 requested_sync = 2;
inline bool CPredictionEvent_Diagnostic::_internal_has_requested_sync() const {
  bool value = (_impl_._has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline bool CPredictionEvent_Diagnostic::has_requested_sync() const {
  return _internal_has_requested_sync();
}
inline void CPredictionEvent_Diagnostic::clear_requested_sync() {
  _impl_.requested_sync_ = 0u;
  _impl_._has_bits_[0] &= ~0x00000002u;
}
inline uint32_t CPredictionEvent_Diagnostic::_internal_requested_sync() const {
  return _impl_.requested_sync_;
}
inline uint32_t CPredictionEvent_Diagnostic::requested_sync() const {
  // @@protoc_insertion_point(field_get:CPredictionEvent_Diagnostic.requested_sync)
  return _internal_requested_sync();
}
inline void CPredictionEvent_Diagnostic::_internal_set_requested_sync(uint32_t value) {
  _impl_._has_bits_[0] |= 0x00000002u;
  _impl_.requested_sync_ = value;
}
inline void CPredictionEvent_Diagnostic::set_requested_sync(uint32_t value) {
  _internal_set_requested_sync(value);
  // @@protoc_insertion_point(field_set:CPredictionEvent_Diagnostic.requested_sync)
}

// optional uint32 requested_player_index = 3;
inline bool CPredictionEvent_Diagnostic::_internal_has_requested_player_index() const {
  bool value = (_impl_._has_bits_[0] & 0x00000004u) != 0;
  return value;
}
inline bool CPredictionEvent_Diagnostic::has_requested_player_index() const {
  return _internal_has_requested_player_index();
}
inline void CPredictionEvent_Diagnostic::clear_requested_player_index() {
  _impl_.requested_player_index_ = 0u;
  _impl_._has_bits_[0] &= ~0x00000004u;
}
inline uint32_t CPredictionEvent_Diagnostic::_internal_requested_player_index() const {
  return _impl_.requested_player_index_;
}
inline uint32_t CPredictionEvent_Diagnostic::requested_player_index() const {
  // @@protoc_insertion_point(field_get:CPredictionEvent_Diagnostic.requested_player_index)
  return _internal_requested_player_index();
}
inline void CPredictionEvent_Diagnostic::_internal_set_requested_player_index(uint32_t value) {
  _impl_._has_bits_[0] |= 0x00000004u;
  _impl_.requested_player_index_ = value;
}
inline void CPredictionEvent_Diagnostic::set_requested_player_index(uint32_t value) {
  _internal_set_requested_player_index(value);
  // @@protoc_insertion_point(field_set:CPredictionEvent_Diagnostic.requested_player_index)
}

// repeated uint32 execution_sync = 4;
inline int CPredictionEvent_Diagnostic::_internal_execution_sync_size() const {
  return _impl_.execution_sync_.size();
}
inline int CPredictionEvent_Diagnostic::execution_sync_size() const {
  return _internal_execution_sync_size();
}
inline void CPredictionEvent_Diagnostic::clear_execution_sync() {
  _impl_.execution_sync_.Clear();
}
inline uint32_t CPredictionEvent_Diagnostic::_internal_execution_sync(int index) const {
  return _impl_.execution_sync_.Get(index);
}
inline uint32_t CPredictionEvent_Diagnostic::execution_sync(int index) const {
  // @@protoc_insertion_point(field_get:CPredictionEvent_Diagnostic.execution_sync)
  return _internal_execution_sync(index);
}
inline void CPredictionEvent_Diagnostic::set_execution_sync(int index, uint32_t value) {
  _impl_.execution_sync_.Set(index, value);
  // @@protoc_insertion_point(field_set:CPredictionEvent_Diagnostic.execution_sync)
}
inline void CPredictionEvent_Diagnostic::_internal_add_execution_sync(uint32_t value) {
  _impl_.execution_sync_.Add(value);
}
inline void CPredictionEvent_Diagnostic::add_execution_sync(uint32_t value) {
  _internal_add_execution_sync(value);
  // @@protoc_insertion_point(field_add:CPredictionEvent_Diagnostic.execution_sync)
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField< uint32_t >&
CPredictionEvent_Diagnostic::_internal_execution_sync() const {
  return _impl_.execution_sync_;
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField< uint32_t >&
CPredictionEvent_Diagnostic::execution_sync() const {
  // @@protoc_insertion_point(field_list:CPredictionEvent_Diagnostic.execution_sync)
  return _internal_execution_sync();
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField< uint32_t >*
CPredictionEvent_Diagnostic::_internal_mutable_execution_sync() {
  return &_impl_.execution_sync_;
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField< uint32_t >*
CPredictionEvent_Diagnostic::mutable_execution_sync() {
  // @@protoc_insertion_point(field_mutable_list:CPredictionEvent_Diagnostic.execution_sync)
  return _internal_mutable_execution_sync();
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__
// -------------------------------------------------------------------

// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)


PROTOBUF_NAMESPACE_OPEN

template <> struct is_proto_enum< ::EBasePredictionEvents> : ::std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::EBasePredictionEvents>() {
  return ::EBasePredictionEvents_descriptor();
}

PROTOBUF_NAMESPACE_CLOSE

// @@protoc_insertion_point(global_scope)

#include <google/protobuf/port_undef.inc>
#endif  // GOOGLE_PROTOBUF_INCLUDED_GOOGLE_PROTOBUF_INCLUDED_prediction_5fevents_2eproto
